{
  "version": "0.2.1",
  "defaults": {},
  "configurations": [
    {
      "type": "cppdbg",
      "name": "Microbit Debug",
      "project": "",
      "cwd": "${workspaceRoot}",
      "program": "${workspaceRoot}\\build\\bbc-microbit-classic-gcc\\source\\microbit-samples-combined.hex",
      "MIMode": "gdb",
      "externalConsole": true,
      "inheritEnvironments": [
        "gcc_arm"
      ],
      "miDebuggerPath": "C:\\Program Files (x86)\\GNU Tools Arm Embedded\\4.9 2015q2\\bin\\arm-none-eabi-gdb.exe",
      "setupCommands": [
        { "text": "-environment-cd ${workspaceRoot}\\build\\bbc-microbit-classic-gcc\\source" },
        {
          "text": "-target-select remote localhost:3333",
          "description": "connect to target",
          "ignoreFailures": false
        },
        {
          "text": "-interpreter-exec console \"monitor reset\"",
          "ignoreFailures": false
        },
        {
          "text": "-interpreter-exec console \"monitor halt\"",
          "ignoreFailures": false
        },
        {
          "text": "-interpreter-exec console \"monitor soft_reset_halt\"",
          "ignoreFailures": false
        },
        {
          "text": "-file-exec-file ./microbit-samples-combined.hex",
          "description": "load file",
          "ignoreFailures": false
        },
        {
          "text": "-file-symbol-file ./microbit-samples",
          "description": "load synbol file",
          "ignoreFailures": false
        }
      ],
      "visualizerFile": "${debugInfo.linuxNatvisPath}",
      "showDisplayString": true,
      "miDebuggerServerAddress": "localhost:3333",
      "launchCompleteCommand": "None",
      "debugServerPath": "C:\\yotta\\workspace\\Scripts\\pyocd-gdbserver.exe",
      "debugServerArgs": "--persist -t nrf51 -bh -r",
      "serverStarted": "GDB\\ server\\ started",
      "serverLaunchTimeout": 20000,

      "filterStderr": true,
      "logging": {
        "moduleLoad": false,
        "trace": true,
        "engineLogging": true,
        "programOutput": true,
        "exceptions": false
      },
      "filterStdout": true
    }
  ]
}